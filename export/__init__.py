import bpy
import mathutils
from math import degrees, radians

from .ini import write_ini
from .scene import write_scene

class Writer:
    def __init__(self, file, useTabs=True):
        self.file = file
        self.useTabs = useTabs
        self.currentLevel = 0


    def write(self, str):
        prefix = ""
        if self.useTabs:
            for i in range(self.currentLevel):
                prefix = prefix + "\t"
        
        self.file.write(prefix + str + "\n")

    
    def goIn(self):
        self.currentLevel = self.currentLevel + 1
    

    def goOut(self):
        self.currentLevel = self.currentLevel - 1
        if self.currentLevel < 0:
            print("DEV ERROR: PEARRAY Exporter currentLevel < 0!")
    
    

class Exporter:
    def __init__(self, filename, scene):
        self.filename = filename
        self.file = None

        self.scene = scene

        self.mesh_instances = []
        self.material_instances = []
        self.spec_instances = []
        self.MISSING_MAT = ''

        # PearRay uses a Y Up vector, but Blender uses a Z Up vector.
        # Here we change it :)
        self.M_WORLD = mathutils.Matrix([(-1,0,0,0), (0,0,-1,0), (0,1,0,0), (0,0,0,1)])
        self.CAM_UNIT_F = 0.1 # Why do I need this? -> TODO: PearRay should be implemented with millimeters in mind!
        self.LIGHT_POW_F = 10

        self.render = scene.render
        self.world = scene.world

    
    #@staticmethod
    def make_unique_name(self, l, name):
        test_name = name
        i = 1
        while test_name in l:
            test_name = "%s_%i" % (name, i)
            i = i + 1
        return test_name


    def write_ini(self):
        self.file = open(self.filename, 'w')
        self.w = Writer(self.file, False)
        ini.write_ini(self)
        self.close()
    
    
    def write_scene(self):
        self.file = open(self.filename, 'w')
        self.w = Writer(self.file, self.scene.pearray.beautiful_prc)

        import datetime
        self.file.write("; generated by pearray exporter v0.2 with blender %s\n" % bpy.app.version_string)
        self.file.write("; at %s\n" % datetime.datetime.now())

        scene.write_scene(self)
        self.close()
        
    
    def close(self):
        self.file.close()

        if self.w.currentLevel > 0:
            print("DEV ERROR: PEARRAY Exporter currentLevel > 0 in the end!")
